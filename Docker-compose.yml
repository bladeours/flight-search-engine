services:

  db:
    container_name: postgresql
    image: postgres
    env_file:
      - ./.env
    volumes:
      - ./database/app:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=$POSTGRESQL_PASSWORD
    ports:
      - "$POSTGRESQL_LOCAL_PORT:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: bladeours/flight-search-engine
    env_file:
      - ./.env
    ports:
      - "$APP_LOCAL_PORT:$APP_DOCKER_PORT"
    environment:
      SPRING_APPLICATION_JSON: '{
                "spring.datasource.url"  : "jdbc:postgresql://db:5432/postgres",
                "spring.datasource.username" : "$POSTGRESQL_USERNAME",
                "spring.datasource.password" : "$POSTGRESQL_PASSWORD",
                "api.url" : "http://api:$FLIGHT_API_DOCKER_PORT",
                "server.port" : "$APP_DOCKER_PORT"
              }'
    container_name: flight-search-engine
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  flightdb:
    image: mysql:latest
    env_file:
      - ./.env
    container_name: flight-db
    volumes:
      - ./database/flight_api:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
    ports:
      - "$MYSQLDB_LOCAL_PORT:3306"

  api:
    depends_on:
      - flightdb
    env_file:
      - ./.env
    image: bladeours/flight-api
    ports:
      - "$FLIGHT_API_LOCAL_PORT:$FLIGHT_API_DOCKER_PORT"
    environment:
      SPRING_APPLICATION_JSON: '{
           "spring.datasource.url"  : "jdbc:mysql://flightdb:$MYSQLDB_DOCKER_PORT/flights",
           "spring.datasource.username" : "$MYSQLDB_USER",
           "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
           "server.port" : "$FLIGHT_API_DOCKER_PORT"
         }'
    container_name: flight-api-app
    restart: unless-stopped